using System.IO;
using System.Threading;
using Xunit;

namespace Ziusudra.Rencode.Tests
{

    public class RencodeStreamWriterTests
    {
        [Theory]
        [Trait("Category", "Integration")]
        [InlineData(null, new byte[] { 0x45 })]
        [InlineData(true, new byte[] { 0x43 })]
        [InlineData(false, new byte[] { 0x44 })]
        [InlineData(1.125f, new byte[] { 0x42, 0x3F, 0x90, 0x00, 0x00 })]
        [InlineData(2147483648, new byte[] { 0x41, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 })]
        [InlineData(32768, new byte[] { 0x40, 0x00, 0x00, 0x80, 0x00 })]
        [InlineData(-32769, new byte[] { 0x40, 0xFF, 0xFF, 0x7F, 0xFF })]
        [InlineData(128, new byte[] { 0x3F, 0x00, 0x80 })]
        [InlineData(-129, new byte[] { 0x3F, 0xFF, 0x7F })]
        [InlineData(1, new byte[] { 0x01 })]
        [InlineData(-5, new byte[] { 0x4A })]
        [InlineData(46, new byte[] { 0x3E, 0x2E })]
        [InlineData(-47, new byte[] { 0x3E, 0xD1 })]
        [InlineData("aasdf", new byte[] { 0x85, 0x61, 0x61, 0x73, 0x64, 0x66 })]
        [InlineData(
            "9ash9f786hjf9ad8fhadf8967hsadf687hasd8f9hdsf8a6gf7h9df67hdhs8f6hsadf876ah5df786asgfdh96fhasdf8967hjasf89h6df7",
            new byte[] { 0x31, 0x30, 0x39, 0x3A, 0x39, 0x61, 0x73, 0x68, 0x39, 0x66, 0x37, 0x38, 0x36, 0x68, 0x6A, 0x66, 0x39,
                0x61, 0x64, 0x38, 0x66, 0x68, 0x61, 0x64, 0x66, 0x38, 0x39, 0x36, 0x37, 0x68, 0x73, 0x61, 0x64, 0x66, 0x36, 0x38,
                0x37, 0x68, 0x61, 0x73, 0x64, 0x38, 0x66, 0x39, 0x68, 0x64, 0x73, 0x66, 0x38, 0x61, 0x36, 0x67, 0x66, 0x37, 0x68,
                0x39, 0x64, 0x66, 0x36, 0x37, 0x68, 0x64, 0x68, 0x73, 0x38, 0x66, 0x36, 0x68, 0x73, 0x61, 0x64, 0x66, 0x38, 0x37,
                0x36, 0x61, 0x68, 0x35, 0x64, 0x66, 0x37, 0x38, 0x36, 0x61, 0x73, 0x67, 0x66, 0x64, 0x68, 0x39, 0x36, 0x66, 0x68,
                0x61, 0x73, 0x64, 0x66, 0x38, 0x39, 0x36, 0x37, 0x68, 0x6A, 0x61, 0x73, 0x66, 0x38, 0x39, 0x68, 0x36, 0x64, 0x66, 0x37 }
        )]
        [InlineData(new object[] { 1, "a", true }, new byte[] { 0xC3, 0x01, 0x81, 0x61, 0x43 })]
        public async void WriteAsync_ShouldProperlyEncodeGivenValue(object? value, byte[] expected)
        {
            MemoryStream ms = new();
            RencodeStreamWriter writer = new(ms, true);

            await writer.WriteValueAsync(value, CancellationToken.None);

            Assert.Equal(expected, ms.ToArray());
        }
    }
}
